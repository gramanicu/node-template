version: '3.8'

services:
  backend:
    container_name: node-template-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${FORWARD_HTTP_PORT}:${HTTP_PORT}"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - .docker.env
    networks:
      - node-template-network
    depends_on:
      - db
      - redis
    healthcheck:
      test: wget http://localhost:${HTTP_PORT} || exit 1
      interval: 5m
      timeout: 10s
      retries: 3

  db:
    container_name: node-template-database
    image: postgres:13.2
    ports:
      - "${FORWARD_DB_PORT}:${DB_PORT}"
    command: -p ${DB_PORT}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .docker.env
    networks:
      - node-template-network
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: pg_isready
      interval: 5m
      timeout: 5s
      retries: 5

  redis:
    container_name: node-template-redis
    image: redis:6.0.9
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${FORWARD_REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redisdata:/data
    networks:
      - node-template-network
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: redis-cli ping
      interval: 5m
      timeout: 5s
      retries: 5

networks:
  node-template-network:

volumes:
  postgresdata:
  redisdata:
